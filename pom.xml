<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright 2014 VU University Medical Center.
    Licensed under the Apache License version 2.0 (see http://opensource.org/licenses/Apache-2.0).

    Description: Maven configuration for the ODM to i2b2 tool.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <name>ODM to i2b2</name>
    <description>ODM to i2b2 tool for converting ODM data to i2b2 format in a database or files</description>
    <url>https://github.com/CTMM-TraIT/trait_odm_to_i2b2</url>
    <groupId>nl.vumc.biomedbridges</groupId>
    <artifactId>odm-to-i2b2</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>

    <properties>
        <!-- Dependency versions. -->
        <blend4j.version>0.1-alpha-7</blend4j.version>
        <guava.version>15.0</guava.version>
        <jsoup.version>1.7.3</jsoup.version>
        <junit.version>4.11</junit.version>
        <mockito.version>1.9.5</mockito.version>
        <opencsv.version>2.3</opencsv.version>

        <!-- todo: check for newer versions. -->
        <ch.qos.logback.version>1.0.13</ch.qos.logback.version>
        <commons-logging.version>1.1.1</commons-logging.version>
        <org.slf4j.version>1.7.5</org.slf4j.version>

        <!-- Source and output properties. -->
        <java-version>1.7</java-version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Plugin versions. -->
        <maven-checkstyle-plugin.version>2.11</maven-checkstyle-plugin.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
        <maven-jxr-plugin.version>2.4</maven-jxr-plugin.version>
    </properties>

    <dependencies>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.3</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>1.9.13</version>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>org.jdom</groupId>-->
            <!--<artifactId>jdom</artifactId>-->
            <!--<version>2.0.2</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>

        <!-- Dependency for Guava. -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <!-- Dependency for the jsoup HTML parser. -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <!-- Dependency for JUnit. -->
        <!--<dependency>-->
            <!--<groupId>junit</groupId>-->
            <!--<artifactId>junit</artifactId>-->
            <!--<version>${junit.version}</version>-->
            <!--<scope>test</scope>-->
        <!--</dependency>-->

        <!-- Dependency for Mockito. -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Logging framework. -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${org.slf4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${ch.qos.logback.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!--
            Drop commons-logging (from spring, among others) in favor of slf4j,
            see http://slf4j.org/faq.html#excludingJCL.
        -->
        <!--<dependency>-->
            <!--<groupId>commons-logging</groupId>-->
            <!--<artifactId>commons-logging</artifactId>-->
            <!--<version>${commons-logging.version}</version>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${org.slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>${opencsv.version}</version>
        </dependency>

    </dependencies>

    <dependencyManagement/>

    <build>
        <sourceDirectory>src/java</sourceDirectory>
        <testSourceDirectory>test/java</testSourceDirectory>
        <directory>target</directory>

        <plugins>
            <!-- Specify Java 7 for sources and targets (.class files). -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java-version}</source>
                    <target>${java-version}</target>
                    <includes>
                        <include>src/java</include>
                        <include>gensrc</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- Use maven-jar-plugin to create executable jar with the "mvn package" command. -->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-jar-plugin</artifactId>-->
                <!--<version>${maven-jar-plugin.version}</version>-->
                <!--<configuration>-->
                    <!--<archive>-->
                        <!--<manifest>-->
                            <!--<addClasspath>true</addClasspath>-->
                            <!--<mainClass>nl.vumc.biomedbridges.WorkflowRunner</mainClass>-->
                            <!--<classpathPrefix>dependency-jars/</classpathPrefix>-->
                        <!--</manifest>-->
                    <!--</archive>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <!-- Run Checkstyle in the verify phase. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                    <!--
                        Workaround for resolving the suppressions file in a maven build: always check two
                        module levels above the current project. IDE builds should provide the config_loc
                        property, hence this setting will not influence the builds triggered in IDEs.
                    -->
                    <!--<propertyExpansion>config_loc=${project.parent.parent.basedir}/</propertyExpansion>-->
                    <failsOnError>true</failsOnError>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <!--<reporting>-->
        <!--<plugins>-->
            <!--&lt;!&ndash; Added the JXR plugin (Java cross-reference tool) to get rid of the "Unable to locate Source XRef to-->
              <!---  link to - DISABLED" warning when running Checkstyle. &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-jxr-plugin</artifactId>-->
                <!--<version>${maven-jxr-plugin.version}</version>-->
            <!--</plugin>-->
        <!--</plugins>-->
    <!--</reporting>-->

</project>
